{"version":3,"file":"static/js/38.21de8836.chunk.js","mappings":"iJAQkBA,EAGAC,E,qEAJZC,EAAW,SAAAC,GAAK,OAAKA,GAA0B,kBAAVA,OAAqBC,EAAY,UAAU,EAGhFC,GAFYL,EAEY,GAFL,SAAAG,GAAK,OAC7BA,GAASA,EAAMG,OAASN,EAAG,WAAAO,OAAcP,EAAG,4BAAwBI,CAAU,GAIzEI,GAFYP,EAEW,EAFJ,SAAAE,GAAK,OAC7BA,GAASA,EAAMG,OAASL,EAAG,WAAAM,OAAcN,EAAG,4BAAwBG,CAAU,GAEzEK,EAAQ,SAAAN,GAAK,OAClBA,IAAU,4CAA4CO,KAAKP,GACxD,6BACAC,CAAU,EAERO,EAAc,SAAHC,GAAA,IAAMC,EAAKD,EAALC,MAAOC,EAAKF,EAALE,MAAOC,EAAIH,EAAJG,KAAIC,EAAAJ,EAAEK,KAAQC,EAAOF,EAAPE,QAASC,EAAKH,EAALG,MAAOC,EAAOJ,EAAPI,QAAO,OACzEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACCC,EAAAA,EAAAA,KAAA,SAAAD,SAAQR,KACRO,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACCC,EAAAA,EAAAA,KAAA,SAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWX,GAAK,IAAEY,YAAaX,EAAOC,KAAMA,KAC3CG,IAAaC,IAASI,EAAAA,EAAAA,KAAA,QAAAD,SAAOH,KAAmBC,IAAWG,EAAAA,EAAAA,KAAA,QAAAD,SAAOF,UAE/D,EAoDP,WAAeM,EAAAA,EAAAA,GAAU,CACxBC,KAAM,SADP,EAjDkB,SAAHC,GAAuD,IAAjDC,EAAYD,EAAZC,aAAcC,EAAQF,EAARE,SAAUC,EAAKH,EAALG,MAAOC,EAAUJ,EAAVI,WAC7CC,GAAWC,EAAAA,EAAAA,MACXC,EAAa,SAAAC,GAClBH,GACCI,EAAAA,EAAAA,IAAM,CACL5B,MAAO2B,EAAO3B,MACd6B,SAAUF,EAAOE,YAInBP,GACD,EAEA,OACCV,EAAAA,EAAAA,MAAA,QACCkB,SAAU,SAAAC,GACTA,EAAEC,iBACFZ,EAAaM,EAAbN,CAAyBW,EAC1B,EAAElB,SAAA,EAEFC,EAAAA,EAAAA,KAACmB,EAAAA,EAAK,CACLC,KAAK,QACL5B,KAAK,QACL6B,UAAWjC,EACXG,MAAM,QACN+B,SAAU,CAAC3C,EAAUO,MAEtBc,EAAAA,EAAAA,KAACmB,EAAAA,EAAK,CACLC,KAAK,WACL5B,KAAK,WACL6B,UAAWjC,EACXG,MAAM,WACN+B,SAAU,CAAC3C,EAAUG,EAAaG,MAEnCa,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACCC,EAAAA,EAAAA,KAAA,UAAQR,KAAK,SAAS+B,SAAUd,EAAWV,SAAC,YAG5CC,EAAAA,EAAAA,KAAA,UAAQR,KAAK,SAAS+B,SAAUhB,GAAYE,EAAYe,QAAShB,EAAMT,SAAC,kBAGxEC,EAAAA,EAAAA,KAAA,UAAQR,KAAK,SAAS+B,SAAUhB,GAAYE,EAAYe,QAAShB,EAAMT,SAAC,sBAM5E,G","sources":["pages/Login.jsx"],"sourcesContent":["/** @format */\n\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { logIn } from 'redux/auth/operations';\n\nconst required = value => (value || typeof value === 'number' ? undefined : 'Required');\nconst maxLength = max => value =>\n\tvalue && value.length > max ? `Must be ${max} characters or less` : undefined;\nconst maxLength15 = maxLength(15);\nconst minLength = min => value =>\n\tvalue && value.length < min ? `Must be ${min} characters or more` : undefined;\nconst minLength2 = minLength(2);\nconst email = value =>\n\tvalue && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\n\t\t? 'Invalid email address'\n\t\t: undefined;\n\nconst renderField = ({ input, label, type, meta: { touched, error, warning } }) => (\n\t<div>\n\t\t<label>{label}</label>\n\t\t<div>\n\t\t\t<input {...input} placeholder={label} type={type} />\n\t\t\t{touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\n\t\t</div>\n\t</div>\n);\n\nconst LoginForm = ({ handleSubmit, pristine, reset, submitting }) => {\n\tconst dispatch = useDispatch();\n\tconst submitForm = values => {\n\t\tdispatch(\n\t\t\tlogIn({\n\t\t\t\temail: values.email,\n\t\t\t\tpassword: values.password,\n\t\t\t})\n\t\t);\n\n\t\treset();\n\t};\n\n\treturn (\n\t\t<form\n\t\t\tonSubmit={e => {\n\t\t\t\te.preventDefault();\n\t\t\t\thandleSubmit(submitForm)(e);\n\t\t\t}}\n\t\t>\n\t\t\t<Field\n\t\t\t\tname='email'\n\t\t\t\ttype='email'\n\t\t\t\tcomponent={renderField}\n\t\t\t\tlabel='Email'\n\t\t\t\tvalidate={[required, email]}\n\t\t\t/>\n\t\t\t<Field\n\t\t\t\tname='password'\n\t\t\t\ttype='password'\n\t\t\t\tcomponent={renderField}\n\t\t\t\tlabel='Password'\n\t\t\t\tvalidate={[required, maxLength15, minLength2]}\n\t\t\t/>\n\t\t\t<div>\n\t\t\t\t<button type='submit' disabled={submitting}>\n\t\t\t\t\tSubmit\n\t\t\t\t</button>\n\t\t\t\t<button type='button' disabled={pristine || submitting} onClick={reset}>\n\t\t\t\t\tCancel login\n\t\t\t\t</button>\n\t\t\t\t<button type='button' disabled={pristine || submitting} onClick={reset}>\n\t\t\t\t\tClear Values\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default reduxForm({\n\tform: 'login',\n})(LoginForm);\n"],"names":["max","min","required","value","undefined","maxLength15","length","concat","minLength2","email","test","renderField","_ref","input","label","type","_ref$meta","meta","touched","error","warning","_jsxs","children","_jsx","_objectSpread","placeholder","reduxForm","form","_ref2","handleSubmit","pristine","reset","submitting","dispatch","useDispatch","submitForm","values","logIn","password","onSubmit","e","preventDefault","Field","name","component","validate","disabled","onClick"],"sourceRoot":""}