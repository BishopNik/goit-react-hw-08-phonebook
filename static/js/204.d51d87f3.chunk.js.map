{"version":3,"file":"static/js/204.d51d87f3.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Filter/Filter.styled.jsx","redux/filter/selectors.js","components/Filter/Filter.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","pages/App.styled.jsx","pages/Phonebook.jsx"],"sourcesContent":["/** @format */\n\nexport const contactsState = state => state.contacts.items;\n\nexport const statusLoadingState = state => state.contacts.isLoading;\n\nexport const statusError = state => state.contacts.error;\n","/** @format */\n\nimport styled from 'styled-components';\n\nexport const FilterField = styled.label`\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 15px;\n\twidth: 700px;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\tfont-size: 26px;\n\twidth: 375px;\n\n\t@media screen and (min-width: 768px) {\n\t\twidth: 700px;\n\t}\n`;\n\nexport const InputFilter = styled.input`\n\tpadding: 10px 25px;\n\tborder-radius: ${p => p.theme.spacing(1)};\n\tborder: none;\n\toutline: 2px solid lightgray;\n\tfont-size: 24px;\n\tcolor: blue;\n\tmargin-bottom: 30px;\n\twidth: 90%;\n\tbox-shadow: 1px 1px 4px 2px rgba(128, 128, 128, 0.5);\n`;\n","/** @format */\n\nexport const filterState = state => state.filter.value;\n","/** @format */\n\nimport { FilterField, InputFilter } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterState } from 'redux/filter/selectors';\nimport { changeFilter } from 'redux/filter/filterSlice';\n\nfunction Filter() {\n\tconst dispatch = useDispatch();\n\tconst filterValue = useSelector(filterState);\n\n\treturn (\n\t\t<FilterField>\n\t\t\tFind contacts by name\n\t\t\t<InputFilter\n\t\t\t\tvalue={filterValue}\n\t\t\t\ttype='text'\n\t\t\t\tname='filter'\n\t\t\t\tautoComplete='off'\n\t\t\t\tonChange={({ target }) => dispatch(changeFilter(target.value))}\n\t\t\t/>\n\t\t</FilterField>\n\t);\n}\n\nexport default Filter;\n","/** @format */\n\nimport styled from 'styled-components';\nimport { Field, Form } from 'formik';\n\nexport const FormBox = styled(Form)`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: flex-start;\n\tgap: ${p => p.theme.spacing(3)};\n`;\n\nexport const ButtonsContainer = styled.div`\n\tdisplay: flex;\n\tgap: 10px;\n`;\n\nexport const InputContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 4px;\n`;\n\nexport const ContactInput = styled(Field)`\n\twidth: 220px;\n\tmargin: 0;\n\tmargin-right: auto;\n\tpadding: ${p => p.theme.spacing(3)};\n\tfont-size: 24px;\n\tcolor: darkblue;\n\tborder: none;\n\tbackground-color: transparent;\n\tborder-radius: 6px;\n\n\t&:focus {\n\t\toutline: 1px solid red;\n\t}\n`;\n\nexport const Label = styled.label`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tgap: 15px;\n\twidth: fit-content;\n\tfont-size: 24px;\n\tfont-weight: 600;\n\tborder-radius: 6px;\n`;\n\nexport const LabelName = styled.span`\n\twidth: 85px;\n`;\n","/** @format */\n\nimport { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Formik, useFormik } from 'formik';\nimport { statusLoadingState, contactsState, statusError } from 'redux/contacts/selectors';\nimport {\n\tFormBox,\n\tContactInput,\n\tButtonsContainer,\n\tInputContainer,\n\tLabel,\n\tLabelName,\n} from './Contact.styled';\nimport { Button } from 'styled/shared.styled';\nimport { fetchDelContact, fetchPutContact } from 'redux/contacts/fetchApi';\nimport { animationButton, checkContact, toastWindow, schema } from '../Helpers';\n\nfunction Contact(contact) {\n\tconst dispatch = useDispatch();\n\tconst contacts = useSelector(contactsState);\n\tconst error = useSelector(statusError);\n\tconst [editContact, setEditContact] = useState({ id: '', name: '', number: '' });\n\tconst [editEnable, setEditEnable] = useState(false);\n\tconst [cancelEditContact, setCancelEditContact] = useState(false);\n\tconst nameInput = useRef(null);\n\tconst numberInput = useRef(null);\n\tconst cancelPutContact = useRef(null);\n\tconst statusLoading = useSelector(statusLoadingState);\n\tconst formik = useFormik({\n\t\tinitialValues: {\n\t\t\tid: contact.id,\n\t\t\tname: contact.name,\n\t\t\tnumber: contact.number,\n\t\t},\n\t\tonSubmit: contact => {\n\t\t\thandlePutContact(contact);\n\t\t},\n\t});\n\n\tuseEffect(() => {\n\t\tconst handleKeyDown = event => {\n\t\t\tif (event.key === 'Escape') {\n\t\t\t\tsetEditEnable(false);\n\t\t\t\tformik.setFieldValue('name', editContact.name);\n\t\t\t\tformik.setFieldValue('number', editContact.number);\n\t\t\t}\n\t\t};\n\n\t\tsetEditContact(contact);\n\t\tdocument.addEventListener('keydown', handleKeyDown);\n\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('keydown', handleKeyDown);\n\t\t};\n\t}, [contact, editContact.name, editContact.number, formik]);\n\n\tuseEffect(() => {\n\t\tif (!statusLoading) {\n\t\t\tsetCancelEditContact(false);\n\t\t}\n\t\tif (error) {\n\t\t\tformik.setFieldValue('name', editContact.name);\n\t\t\tformik.setFieldValue('number', editContact.number);\n\t\t}\n\t}, [editContact.name, editContact.number, error, formik, statusLoading]);\n\n\tuseEffect(() => {\n\t\tif (editEnable) {\n\t\t\tnameInput.current.style = 'background-color: #fefbf0;';\n\t\t\tnumberInput.current.style = 'background-color: #fefbf0;';\n\t\t\tnameInput.current.focus();\n\t\t} else {\n\t\t\tnameInput.current.style = 'background-color: transparent;';\n\t\t\tnumberInput.current.style = 'background-color: transparent;';\n\t\t}\n\t}, [editEnable]);\n\n\tconst handleEditContact = e => {\n\t\tsetEditEnable(true);\n\t};\n\n\tconst handleDeleteContact = e => {\n\t\tanimationButton(e);\n\t\tdispatch(fetchDelContact(e.target.id));\n\t\ttoastWindow(`Contact deleted.`);\n\t};\n\n\tconst handlePutContact = contact => {\n\t\tsetEditContact(contact);\n\t\tschema\n\t\t\t.validate(contact)\n\t\t\t.then(() => {\n\t\t\t\tconst status = checkContact(contacts, contact.name, contact.id);\n\t\t\t\tif (!status) {\n\t\t\t\t\tsetEditEnable(false);\n\t\t\t\t\tcancelPutContact.current = dispatch(fetchPutContact(contact));\n\t\t\t\t\tsetCancelEditContact(true);\n\t\t\t\t} else toastWindow(`Please change contacts.`);\n\t\t\t})\n\t\t\t.catch(validationErrors => {\n\t\t\t\ttoastWindow(`Error: ${validationErrors.errors}`);\n\t\t\t});\n\t};\n\n\tconst idle = !editEnable && !cancelEditContact;\n\tconst edit = editEnable && !cancelEditContact;\n\n\treturn (\n\t\t<>\n\t\t\t<Formik\n\t\t\t\tinitialValues={{\n\t\t\t\t\tid: formik.values.id,\n\t\t\t\t\tname: formik.values.name,\n\t\t\t\t\tnumber: formik.values.number,\n\t\t\t\t}}\n\t\t\t\tonSubmit={formik.handleSubmit}\n\t\t\t>\n\t\t\t\t<FormBox>\n\t\t\t\t\t<InputContainer>\n\t\t\t\t\t\t<Label ref={nameInput}>\n\t\t\t\t\t\t\t<LabelName>Name:</LabelName>\n\t\t\t\t\t\t\t<ContactInput\n\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t{...formik.getFieldProps('name')}\n\t\t\t\t\t\t\t\tdisabled={!editEnable}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t<Label ref={numberInput}>\n\t\t\t\t\t\t\t<LabelName>Number:</LabelName>\n\t\t\t\t\t\t\t<ContactInput\n\t\t\t\t\t\t\t\tname='number'\n\t\t\t\t\t\t\t\ttype='tel'\n\t\t\t\t\t\t\t\t{...formik.getFieldProps('number')}\n\t\t\t\t\t\t\t\tdisabled={!editEnable}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Label>\n\t\t\t\t\t</InputContainer>\n\n\t\t\t\t\t<ButtonsContainer>\n\t\t\t\t\t\t{edit && (\n\t\t\t\t\t\t\t<Button type='submit' disabled={statusLoading}>\n\t\t\t\t\t\t\t\t✅\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{idle && (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\tdisabled={statusLoading}\n\t\t\t\t\t\t\t\tonClick={handleEditContact}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{cancelEditContact && (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\tdisabled={!statusLoading}\n\t\t\t\t\t\t\t\tonClick={e => {\n\t\t\t\t\t\t\t\t\tcancelPutContact.current?.abort();\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t❌\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tid={contact.id}\n\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\tdisabled={statusLoading}\n\t\t\t\t\t\t\tonClick={handleDeleteContact}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</ButtonsContainer>\n\t\t\t\t</FormBox>\n\t\t\t</Formik>\n\t\t</>\n\t);\n}\n\nexport default Contact;\n","/** @format */\n\nimport styled from 'styled-components';\n\nexport const ContactsBox = styled.ul`\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tgap: 10px;\n\tjustify-content: center;\n\talign-items: center;\n\tpadding: 0;\n`;\n\nexport const ContactContainer = styled.li`\n\tdisplay: flex;\n\talign-items: center;\n\tpadding: ${p => p.theme.spacing(6)};\n\tpadding-top: ${p => p.theme.spacing(2)};\n\toutline: 1px solid lightgray;\n\tborder-radius: 8px;\n\n\t@media screen and (max-width: 767px) {\n\t\twidth: 97%;\n\t}\n\n\t@media screen and (min-width: 768px) and (max-width: 1279px) {\n\t\twidth: calc((100% - 10px) / 2);\n\t}\n\n\t@media screen and (min-width: 1280px) {\n\t\twidth: calc((100% - 20px) / 3);\n\t}\n`;\n","/** @format */\n\nimport { useEffect, useState } from 'react';\nimport { useDebounce } from 'react-use';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Contact from '../Contact';\nimport { ContactContainer, ContactsBox } from './ContactList.styled';\nimport { contactsState } from 'redux/contacts/selectors';\nimport { filterState } from 'redux/filter/selectors';\nimport { fetchAllContacts } from 'redux/contacts/fetchApi';\n\nfunction ContactList() {\n\tconst dispatch = useDispatch();\n\tconst filterValue = useSelector(filterState);\n\tconst contacts = useSelector(contactsState);\n\tconst [filteredContacts, setFilteredContacts] = useState([]);\n\n\tuseDebounce(\n\t\t() => {\n\t\t\tconst filtered = contacts\n\t\t\t\t? contacts\n\t\t\t\t\t\t.filter(contact =>\n\t\t\t\t\t\t\tcontact.name.toLowerCase().includes(filterValue?.toLowerCase())\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.reverse()\n\t\t\t\t: [];\n\t\t\tsetFilteredContacts(filtered);\n\t\t},\n\t\t250,\n\t\t[contacts, filterValue]\n\t);\n\n\tuseEffect(() => {\n\t\tdispatch(fetchAllContacts());\n\t}, [dispatch]);\n\n\treturn (\n\t\t<ContactsBox>\n\t\t\t{filteredContacts?.map(({ id, name, number }) => (\n\t\t\t\t<ContactContainer key={id}>\n\t\t\t\t\t<Contact id={id} name={name} number={number} />\n\t\t\t\t</ContactContainer>\n\t\t\t))}\n\t\t</ContactsBox>\n\t);\n}\n\nexport default ContactList;\n","/** @format */\n\nimport styled from 'styled-components';\nimport { Field, Form } from 'formik';\n\nexport const FormikContact = styled(Form)`\n\tbox-sizing: border-box;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\tpadding: 20px 25px;\n\tborder: 1px solid rgba(0, 0, 0, 0.7);\n\tborder-radius: ${p => p.theme.spacing(4)};\n\tbox-shadow: 0px 0px 8px 4px rgba(128, 128, 128, 0.5);\n\n\t@media screen and (min-width: 768px) {\n\t\tpadding: 40px 55px;\n\t}\n`;\n\nexport const Label = styled.label`\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 15px;\n\tmargin-right: auto;\n\tmargin-bottom: ${p => p.theme.spacing(9)};\n\tfont-size: 24px;\n\tfont-weight: 600;\n\n\t@media screen and (max-width: 767px) {\n\t\twidth: 100%;\n\t}\n\n\t@media screen and (min-width: 768px) {\n\t\twidth: 90%;\n\t}\n`;\n\nexport const InputFormik = styled(Field)`\n\tpadding: 10px 25px;\n\tborder-radius: ${p => p.theme.spacing(1)};\n\tborder: none;\n\toutline: 2px solid lightgray;\n\tfont-size: 24px;\n\tcolor: blue;\n`;\n\nexport const AddButton = styled.button`\n\tborder-radius: 6px;\n\tfont-size: 22px;\n\tborder: 1px solid rgba(0, 0, 0, 0.7);\n\tcursor: pointer;\n\tbox-shadow: 0px 0px 4px 2px rgba(128, 128, 128, 0.5);\n\ttransition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\tmin-width: 200px;\n\theight: 48px;\n\n\t&:hover {\n\t\tbackground-color: antiquewhite;\n\t\ttransition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\t}\n`;\n\nexport const CancelButton = styled.button`\n\tborder-radius: 6px;\n\tfont-size: 22px;\n\tborder: 1px solid rgba(0, 0, 0, 0.7);\n\tcursor: pointer;\n\tbox-shadow: 0px 0px 4px 2px rgba(128, 128, 128, 0.5);\n\ttransition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\tmin-width: 50px;\n\theight: 48px;\n\tmargin-left: 10px;\n\twidth: fit-content;\n\n\t@media screen and (min-width: 768px) {\n\t\tmargin-left: 25px;\n\t}\n\n\t&:hover {\n\t\tbackground-color: antiquewhite;\n\t\ttransition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\t}\n`;\n","/** @format */\n\nimport { useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport { contactsState, statusLoadingState } from 'redux/contacts/selectors';\nimport { fetchPostContact } from 'redux/contacts/fetchApi';\nimport { toastWindow, animationButton, checkContact, schema } from '../Helpers';\nimport {\n\tLabel,\n\tFormikContact,\n\tInputFormik,\n\tAddButton,\n\tCancelButton,\n} from './ContactForm.styled.jsx';\n\nfunction ContactForm({ onSubmitForm }) {\n\tconst dispatch = useDispatch();\n\tconst contacts = useSelector(contactsState);\n\tconst statusLoading = useSelector(statusLoadingState);\n\tconst cancelAddContact = useRef(null);\n\n\tconst handleAddContact = ({ name, number }) => {\n\t\tconst status = checkContact(contacts, name);\n\t\tif (!status) {\n\t\t\tcancelAddContact.current = dispatch(fetchPostContact({ name, number }));\n\t\t} else toastWindow(`${name} is already in contacts.`);\n\t\treturn status;\n\t};\n\n\tconst handleSubmit = (contact, actions) => {\n\t\tschema\n\t\t\t.validate(contact)\n\t\t\t.then(() => {\n\t\t\t\t!handleAddContact(contact) && actions.resetForm();\n\t\t\t})\n\t\t\t.catch(validationErrors => {\n\t\t\t\ttoastWindow(`Error: ${validationErrors.errors}`);\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Formik\n\t\t\t\tinitialValues={{\n\t\t\t\t\tname: '',\n\t\t\t\t\tnumber: '',\n\t\t\t\t}}\n\t\t\t\tonSubmit={handleSubmit}\n\t\t\t>\n\t\t\t\t<FormikContact>\n\t\t\t\t\t<Label>\n\t\t\t\t\t\tName\n\t\t\t\t\t\t<InputFormik\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\tpattern=\"^[a-zA-Zа-яА-Я]+([' \\-]?[a-zA-Zа-яА-Я ])*$\"\n\t\t\t\t\t\t\ttitle=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tautoComplete='off'\n\t\t\t\t\t\t\tplaceholder='Aneta'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Label>\n\n\t\t\t\t\t<Label>\n\t\t\t\t\t\tNumber\n\t\t\t\t\t\t<InputFormik\n\t\t\t\t\t\t\ttype='tel'\n\t\t\t\t\t\t\tname='number'\n\t\t\t\t\t\t\tpattern='\\+?\\d{1,4}[\\-.\\s]?\\(?\\d{1,3}\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}'\n\t\t\t\t\t\t\ttitle='Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tautoComplete='off'\n\t\t\t\t\t\t\tplaceholder='48-787-453-876'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Label>\n\n\t\t\t\t\t<AddButton type='submit' onClick={animationButton} disabled={statusLoading}>\n\t\t\t\t\t\tAdd contact\n\t\t\t\t\t</AddButton>\n\t\t\t\t\t<CancelButton\n\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\tdisabled={!statusLoading}\n\t\t\t\t\t\tonClick={e => {\n\t\t\t\t\t\t\tanimationButton(e);\n\t\t\t\t\t\t\tcancelAddContact.current?.abort();\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t❌\n\t\t\t\t\t</CancelButton>\n\t\t\t\t</FormikContact>\n\t\t\t</Formik>\n\t\t</>\n\t);\n}\n\nexport default ContactForm;\n","/** @format */\n\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n\tpadding: 0 30px;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\n\t&:last-child {\n\t\tmargin-bottom: 40px;\n\t}\n\n\t@media screen and (max-width: 767px) {\n\t\twidth: 400px;\n\t}\n\n\t@media screen and (min-width: 768px) and (max-width: 1279px) {\n\t\twidth: 768px;\n\t}\n\n\t@media screen and (min-width: 1280px) {\n\t\twidth: 1280px;\n\t}\n`;\n\nexport const TitleName = styled.h2`\n\tmargin: 24px 0;\n\tpadding: 0 30px;\n\tfont-size: 36px;\n`;\n\nexport const FormBox = styled.div`\n\twidth: 340px;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\n\t@media screen and (min-width: 768px) {\n\t\twidth: 730px;\n\t}\n`;\n\nexport const MenuLog = styled.div`\n\twidth: 340px;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\n\t@media screen and (min-width: 768px) {\n\t\twidth: 730px;\n\t}\n`;\n","/** @format */\n\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { statusError } from 'redux/contacts/selectors';\nimport { resetError } from 'redux/contacts/contactsSlice';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport ContactForm from 'components/ContactForm';\nimport { TitleName, FormBox } from './App.styled';\nimport { Container } from 'styled/shared.styled';\nimport { toastWindow } from 'components/Helpers';\n\nfunction Phonebook() {\n\tconst error = useSelector(statusError);\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tif (error !== null) toastWindow(`Error loading contacts: ${error}`);\n\t\tdispatch(resetError());\n\t}, [dispatch, error]);\n\n\treturn (\n\t\t<Container>\n\t\t\t<FormBox>\n\t\t\t\t<TitleName>Phonebook</TitleName>\n\t\t\t\t<ContactForm />\n\t\t\t</FormBox>\n\t\t\t<FormBox>\n\t\t\t\t<TitleName>Contacts</TitleName>\n\t\t\t</FormBox>\n\n\t\t\t<Filter />\n\n\t\t\t<ContactList />\n\t\t</Container>\n\t);\n}\n\nexport default Phonebook;\n"],"names":["contactsState","state","contacts","items","statusLoadingState","isLoading","statusError","error","FilterField","styled","_templateObject","_taggedTemplateLiteral","InputFilter","_templateObject2","p","theme","spacing","filterState","filter","value","dispatch","useDispatch","filterValue","useSelector","_jsxs","children","_jsx","type","name","autoComplete","onChange","_ref","target","changeFilter","FormBox","Form","ButtonsContainer","InputContainer","_templateObject3","ContactInput","Field","_templateObject4","Label","_templateObject5","LabelName","_templateObject6","contact","_useState","useState","id","number","_useState2","_slicedToArray","editContact","setEditContact","_useState3","_useState4","editEnable","setEditEnable","_useState5","_useState6","cancelEditContact","setCancelEditContact","nameInput","useRef","numberInput","cancelPutContact","statusLoading","formik","useFormik","initialValues","onSubmit","handlePutContact","useEffect","handleKeyDown","event","key","setFieldValue","document","addEventListener","removeEventListener","current","style","focus","schema","then","checkContact","toastWindow","fetchPutContact","catch","validationErrors","concat","errors","idle","edit","_Fragment","Formik","values","handleSubmit","ref","_objectSpread","getFieldProps","disabled","Button","onClick","e","_cancelPutContact$cur","abort","animationButton","fetchDelContact","ContactsBox","ContactContainer","filteredContacts","setFilteredContacts","useDebounce","filtered","toLowerCase","includes","reverse","fetchAllContacts","map","Contact","FormikContact","InputFormik","AddButton","CancelButton","onSubmitForm","cancelAddContact","actions","_ref2","status","fetchPostContact","handleAddContact","resetForm","pattern","title","required","placeholder","_cancelAddContact$cur","TitleName","resetError","Container","ContactForm","Filter","ContactList"],"sourceRoot":""}