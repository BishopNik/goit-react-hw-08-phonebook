{"version":3,"file":"static/js/38.021f9864.chunk.js","mappings":"mSAGkBA,E,mBADLC,EAAW,SAAAC,GAAK,OAAKA,GAA0B,kBAAVA,OAAqBC,EAAY,UAAU,EAGhFC,GAFKJ,EAEmB,GAFZ,SAAAE,GAAK,OAC7BA,GAASA,EAAMG,OAASL,EAAG,WAAAM,OAAcN,EAAG,4BAAwBG,CAAU,GAEzEI,EAAY,SAAAC,GAAG,OAAI,SAAAN,GAAK,OAC7BA,GAASA,EAAMG,OAASG,EAAG,WAAAF,OAAcE,EAAG,4BAAwBL,CAAU,CAAD,EACjEM,EAAaF,EAAU,GACvBG,EAAaH,EAAU,GACvBI,EAAQ,SAAAT,GAAK,OACzBA,IAAU,4CAA4CU,KAAKV,GACxD,6BACAC,CAAU,EAEDU,EAAc,SAAHC,GAAA,IAAMC,EAAKD,EAALC,MAAOC,EAAKF,EAALE,MAAOC,EAAIH,EAAJG,KAAIC,EAAAJ,EAAEK,KAAQC,EAAOF,EAAPE,QAASC,EAAKH,EAALG,MAAOC,EAAOJ,EAAPI,QAAO,OAChFC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACCC,EAAAA,EAAAA,KAAA,SAAAD,SAAQR,KACRO,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACCC,EAAAA,EAAAA,KAAA,SAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWX,GAAK,IAAEY,YAAaX,EAAOC,KAAMA,KAC3CG,IAAaC,IAASI,EAAAA,EAAAA,KAAA,QAAAD,SAAOH,KAAmBC,IAAWG,EAAAA,EAAAA,KAAA,QAAAD,SAAOF,UAE/D,C,uGCoDP,WAAeM,EAAAA,EAAAA,GAAU,CACxBC,KAAM,SADP,EA1DkB,SAAHf,GAAuD,IAAjDgB,EAAYhB,EAAZgB,aAAcC,EAAQjB,EAARiB,SAAUC,EAAKlB,EAALkB,MAAOC,EAAUnB,EAAVmB,WAC7CC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,QAAO,MAErBC,EAAa,SAAAC,IACbA,EAAO5B,OAAU4B,EAAOC,YAG7BJ,EAAYK,QAAUP,GACrBQ,EAAAA,EAAAA,IAAM,CACL/B,MAAO4B,EAAO5B,MACd6B,SAAUD,EAAOC,YAKpB,EAEA,OACCjB,EAAAA,EAAAA,MAAA,QACCoB,SAAU,SAAAC,GACTA,EAAEC,iBACFf,EAAaQ,EAAbR,CAAyBc,EAC1B,EAAEpB,SAAA,EAEFC,EAAAA,EAAAA,KAACqB,EAAAA,EAAK,CACLC,KAAK,QACL9B,KAAK,QACL+B,UAAWnC,EAAAA,GACXG,MAAM,QACNiC,SAAU,CAAChD,EAAAA,GAAUU,EAAAA,OAEtBc,EAAAA,EAAAA,KAACqB,EAAAA,EAAK,CACLC,KAAK,WACL9B,KAAK,WACL+B,UAAWnC,EAAAA,GACXG,MAAM,WACNiC,SAAU,CAAChD,EAAAA,GAAUG,EAAAA,GAAaM,EAAAA,OAEnCa,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACCC,EAAAA,EAAAA,KAAA,UAAQR,KAAK,SAASiC,SAAUjB,EAAWT,SAAC,YAG5CC,EAAAA,EAAAA,KAAA,UACCR,KAAK,SACLiC,SAAUnB,GAAoC,OAAxBK,EAAYK,QAClCU,QAAS,eAAAC,EAAA,OAAyB,QAAzBA,EAAMhB,EAAYK,eAAO,IAAAW,OAAA,EAAnBA,EAAqBC,OAAO,EAAC7B,SAC5C,kBAGDC,EAAAA,EAAAA,KAAA,UAAQR,KAAK,SAASiC,SAAUnB,GAAYE,EAAYkB,QAASnB,EAAMR,SAAC,sBAM5E,G","sources":["components/Login/loginFieldCheck.js","pages/Login.jsx"],"sourcesContent":["/** @format */\n\nexport const required = value => (value || typeof value === 'number' ? undefined : 'Required');\nconst maxLength = max => value =>\n\tvalue && value.length > max ? `Must be ${max} characters or less` : undefined;\nexport const maxLength15 = maxLength(15);\nconst minLength = min => value =>\n\tvalue && value.length < min ? `Must be ${min} characters or more` : undefined;\nexport const minLength2 = minLength(2);\nexport const minLength7 = minLength(7);\nexport const email = value =>\n\tvalue && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\n\t\t? 'Invalid email address'\n\t\t: undefined;\n\nexport const renderField = ({ input, label, type, meta: { touched, error, warning } }) => (\n\t<div>\n\t\t<label>{label}</label>\n\t\t<div>\n\t\t\t<input {...input} placeholder={label} type={type} />\n\t\t\t{touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\n\t\t</div>\n\t</div>\n);\n","/** @format */\n\nimport React, { useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\n\nimport { logIn } from 'redux/auth/operations';\n\nimport {\n\trequired,\n\tmaxLength15,\n\tminLength7,\n\temail,\n\trenderField,\n} from 'components/Login/loginFieldCheck';\n\nconst LoginForm = ({ handleSubmit, pristine, reset, submitting }) => {\n\tconst dispatch = useDispatch();\n\tconst cancelLogin = useRef(null);\n\n\tconst submitForm = values => {\n\t\tif (!values.email && !values.password) {\n\t\t\treturn;\n\t\t}\n\t\tcancelLogin.current = dispatch(\n\t\t\tlogIn({\n\t\t\t\temail: values.email,\n\t\t\t\tpassword: values.password,\n\t\t\t})\n\t\t);\n\n\t\t// reset();\n\t};\n\n\treturn (\n\t\t<form\n\t\t\tonSubmit={e => {\n\t\t\t\te.preventDefault();\n\t\t\t\thandleSubmit(submitForm)(e);\n\t\t\t}}\n\t\t>\n\t\t\t<Field\n\t\t\t\tname='email'\n\t\t\t\ttype='email'\n\t\t\t\tcomponent={renderField}\n\t\t\t\tlabel='Email'\n\t\t\t\tvalidate={[required, email]}\n\t\t\t/>\n\t\t\t<Field\n\t\t\t\tname='password'\n\t\t\t\ttype='password'\n\t\t\t\tcomponent={renderField}\n\t\t\t\tlabel='Password'\n\t\t\t\tvalidate={[required, maxLength15, minLength7]}\n\t\t\t/>\n\t\t\t<div>\n\t\t\t\t<button type='submit' disabled={submitting}>\n\t\t\t\t\tSubmit\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\ttype='button'\n\t\t\t\t\tdisabled={pristine || cancelLogin.current === null}\n\t\t\t\t\tonClick={() => cancelLogin.current?.abort()}\n\t\t\t\t>\n\t\t\t\t\tCancel login\n\t\t\t\t</button>\n\t\t\t\t<button type='button' disabled={pristine || submitting} onClick={reset}>\n\t\t\t\t\tClear Values\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default reduxForm({\n\tform: 'login',\n})(LoginForm);\n"],"names":["max","required","value","undefined","maxLength15","length","concat","minLength","min","minLength2","minLength7","email","test","renderField","_ref","input","label","type","_ref$meta","meta","touched","error","warning","_jsxs","children","_jsx","_objectSpread","placeholder","reduxForm","form","handleSubmit","pristine","reset","submitting","dispatch","useDispatch","cancelLogin","useRef","submitForm","values","password","current","logIn","onSubmit","e","preventDefault","Field","name","component","validate","disabled","onClick","_cancelLogin$current","abort"],"sourceRoot":""}